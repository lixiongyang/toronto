% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cvl4acp.R
\name{cvl4acp}
\alias{cvl4acp}
\alias{cvl4acpEst}
\title{Cross-validation for l4acp}
\usage{
cvl4acp(x, y, q, s=NULL, trim=0.1, nfolds=10)
}
\arguments{
\item{x}{Covariates as in \code{l4acp}.}

\item{y}{A dependent variable as in \code{l4acp}.}

\item{q}{A threshold covariate as in \code{l4acp}.}

\item{s}{Input for the sequence of lambdas to be tested. By default, it generates 3 lambda sequences of length 100, following the method used in \code{glmnet} 3 times from the top, middle, and bottom values of threshold parameter's range.
But in usual case, the three lambda sequences are identical. So after removing duplication, 100 values remain.
And at the last time it augments the sequence by adding a sequence of length 100 from the lowest value of the existing lambda sequence to 0, with an equal difference between two adjacent values.}

\item{trim}{The percentile for trimming to obtain the range of a threshold parameter as in \code{l4acp}.}

\item{nfolds}{the number of folds for cross-validation. By default it is 10}
}
\value{
\item{cvm}{ The iterated mean of tested mean squared errors for each fold. Each value corresponds to different lambdas. Note that it is written as tested-MSE in the graph from \code{plot.cvl4acp}.}
\item{mse}{ The tested MSE for each fold. Its row corresponds to different folds, and column corresponds to different lambdas.}
\item{cvsd}{ The standard error for tested MSE (computed from k number of errors). Each value corresponds to different lambdas.}
\item{lambda.seq}{ The lambda sequence it runned cross validation.}
\item{lamda.min}{ The lambda value that minimizes the cvm.}
\item{lambda.1se}{ The maximal lambda among the values that are smaller than \code{lambda.min}+1*\code{cvsd}(it depends on lambda)}
\item{lambda.sample}{ The lambda values from \code{lambda.min} to \code{lambda.1se}.}
}
\description{
Does k-folds cross-validation for l4acp, produces a plot, and returns a value for lambda
}
\examples{
x <- matrix(rnorm(1000), nrow = 50, ncol = 20)
q <- runif(50)
y <- x[,c(1,3)] \%*\% c(1,1) + x[,c(2,3)] \%*\% c(-1,1) * (q < 0.5) + 0.5 * rnorm(50)
cvfit <- cvl4acp(x,y,q, nfolds=5)
print(cvfit)

}
\references{
Sokbae Lee, Myung Hwan Seo, and Youngki Shin, (2016) \emph{The Lasso for High-Dimensional Regression with a Possible Change Point}, Journal of the Royal Statistical Society Series B, Vol 78(1), 193-210
}
\seealso{
\code{plot.cvl4acp} and \code{l4acp}
}
