getwd()
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages("rstudioapi")
rstudioapi::isAvailable("0.99.149")
devtools::install_github("r-lib/devtools")
warning()
library(devtools)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("r-lib/devtools")
has_devel()
library(devtools)
has_devel()
print(has_devel())
devtools::session_info()
.libPaths()
devtools::create("path/to/package/pkgname")
devtools::create("toronto")
help("Deprecated")
usethis::proj_set()
dir<-getwd()
usethis::proj_set(paste(dir,"/toronto",sep=""))
warning()
create_package(dir)
create_package("toronto")
use_descrption()
use_description()
use_rstudio()
install.packages("knitr")
install.packages("kableExtra")
knit("example.Rnw")
library(knitr)
knit("example.Rnw")
knit("doc.Rnw")
knit("doc.Rnw")
knit("doc.Rnw")
knit("doc.Rnw")
install.packages("knitr")
knit("doc.Rnw")
library(knitr)
knit("doc.Rnw")
install.packages("knitr")
knit("doc.Rnw")
install.packages("knitr")
knit("doc.Rnw")
knit("doc.Rnw")
library(knitr)
knit("doc.Rnw")
knit("C:/Rdata/mydic/replication/myknit.Rnw")
knit("C:/Rdata/mydic/replication/myknit.Rnw")
knit("C:/Rdata/mydic/replication/myknit.Rnw")
knit("C:/Rdata/mydic/replication/myknit.Rnw")
knit("C:/Rdata/mydic/replication/myknit.Rnw")
getwd()
library(xtable)
library(knitr)
ls()
getwd()
list.files()
knit("exmample.Rnw")
library(knitr)
knit("exmample.Rnw")
knit("example.Rnw")
install.packages("GGally")
knit("example.Rnw")
install.packages("ggthemes")
knit("example.Rnw")
install.packages("xkcd")
knit("example.Rnw")
data("airquality", packages="datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
data("airquality", package="datasets")
airquality
airquality[1:10,]
knit("example.Rnw")
library(knitr)
knit("example.Rnw")
knit("example.tex")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
airquality[1:3,]
knit("example.Rnw")
hist(x,y)
?hist
class(sample(1:20,5))
j<-sample(1:20,5)
j
x[,j]
x <- matrix(rnorm(1000),nrow=50,ncol=20)
j <- sample(1:20, 5)
y <- x[,j] %*% c(1,-1,2,1,0.5) + rnorm(20)*0.5
fit <- glmnet(x,y)
library(glmnet)
fit <- glmnet(x,y)
fit
?glmnet
fit$a0
xtable(fit)
fit
fit$dev.ratio
print(fit)
xtable(print(fit))
xtable(print(fit), digits=5)
x <- matrix(rnorm(1000),nrow=50,ncol=20)
j <- sample(1:20, 5)
y <- x[,j] %*% c(1,-1,2,1,0.5) + rnorm(20)*0.5
fit <- glmnet(x,y,nlambda=20)
tb <- xtable(print(fit))
align(tb) <- xalign(tb)
tb
digits(tb) <- xdigits(tb)
tb
display(tb) <- xdisplay(tb)
tb
x <- matrix(rnorm(1000),nrow=50,ncol=20)
j <- sample(1:20, 5)
y <- x[,j] %*% c(1,1,1,-1,-1) + rnorm(20)*0.5
fit <- glmnet(x,y,nlambda=30)
tb <- xtable(print(fit))
align(tb) <- xalign(tb)
digits(tb) <- xdigits(tb)
display(tb) <- xdisplay(tb)
print(tb)
knit("example.Rnw")
j
x[,j]
x[,j]%*%c(1,1,1,1,1)
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
class(print(fit))
plot.cv.glmnet(x,y)
cvfit<-cv.glmnet(x,y)
plot(cvfit)
knit("example.Rnw")
knit("example.Rnw")
plot(cvfit)
plot(cvfit)
knit("example.Rnw")
?plot.cv.glmnet
?plot.cv.glmnet
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
knit("example.Rnw")
plot(fit)
library(knitr)
knit("example.Rnw")
plot(fit)
sessionInfo()
upgradeR()
install.packages("installr")
library(installr)
updateR()
library("devtools")
install_github("wsggong/toronto")
library(githubinstall)
githubinstall("toronto")
l4acp <- gh_search_packages("l4acp")
l4acp
library("toronto")
library(devtools)
install_github()
library("devtools")
install.packages("devtools")
library(devtools)
github_pat
github_pat()
install_github("wsggong/toronto")
library(toronto)
?cv.l4acp
?l4acp
?cvl4acp
github_pat()
library(knitr)
library(devtools)
install_github("r-lib/devtools")
?seq
x <- 50/1.05
for(i in 1:19){
x <- append(x[i] , x/1.05)
}
x
x <- 50/1.05
for(i in 1:19){
x <- append(x , x[i]/1.05)
}
x
sum(x)
x <- 50/1.05
for(i in 1:29){
x <- append(x , x[i]/1.05)
}
sum(x)
z <- c(1,2,3)
Q <- z%*%t(z)
Q
rank(Q)
inv(Q)
inverse(Q)
solve(Q)
library(toronto)
?l4acp
data("grdata")
grdata
x <- grdata[,c(5:dim(grdata)[2])]
q <- grdata[,"gdp60"]
y <- grdata[,"gr"]
fit <- l4acp(x,y,q, s=0.0007)
fit
plot(fit)
?cvl4acp
cvfit <- cvl4acp(x,y,q, nfolds=5)
cvfit
plot(cvfit)
cvfit$lambda.sample
fit <- l4acp(x,y,q, s=c(cvfit$lambda.min,cvfit$lambda.1se))
fit
plot(fit)
plot(fit, s=1)
devtools::install_github("wsggong/toronto")
devtools::install_github("wsggong/toronto", force=TRUE)
library(toronto)
install.packages("Rmosek", type="source", INSTALL_opts="--no-multiarch", repos="http://
˓→download.mosek.com/R/8")
install.packages("Rmosek", type="source", INSTALL_opts="--no-multiarch", repos="http://download.mosek.com/R/8")
library("Rmosek")
pkgload::load_dll("Rmosek")
pkgload::load_all("Rmosek")
library(pkgload)
?load_all()
getwd()
load_all("C:/Users/wsggo/Documents/R/win-library/3.5/Rmosek")
update.packages()
load_all("C:/Users/wsggo/Documents/R/win-library/3.5/Rmosek")
install.packages("Rmosek", type="source", INSTALL_opts="--no-multiarch", repos="http://download.mosek.com/R/8")
library("devtools")
load_all("Rmosek")
install.packages("Rtools")
install_github("thirdwing/Rtools")
install.packages("Rmosek", type="source", INSTALL_opts="--no-multiarch")
install.packages("Rmosek", type="source", INSTALL_opts="--no-multiarch"
)
install.packages("C:\Users\wsggo\Documents\Rmosek_8.0.69.tar.gz", repos=NULL,
type="source", INSTALL_opts="--no-multiarch")
getwd()
install.packages("C:/Users/wsggo/Documents/Rmosek_8.0.69.tar.gz", repos=NULL,
type="source", INSTALL_opts="--no-multiarch")
library("Rmosek")
install.packages("C:/Users/wsggo/Documents/Rmosek_8.0.69.tar.gz", repos=NULL,
type="source", INSTALL_opts="--no-multiarch")
install.packages("C:/Users/wsggo/Documents/Rmosek_8.0.69.tar.gz", repos=NULL,
type="source", INSTALL_opts="--no-multiarch")
install.packages("C:/Users/wsggo/Documents/Rmosek_1.2.5.1.tar.gz", repos=NULL,
+ type="source", INSTALL_opts="--no-multiarch")
install.packages("C:/Users/wsggo/Documents/Rmosek_1.2.5.1.tar.gz", repos=NULL, type="source", INSTALL_opts="--no-multiarch")
install.packages("C:/Users/wsggo/Documents/Rmosek_1.2.5.1.tar.gz", repos=NULL, type="source", INSTALL_opts="--no-multiarch")
install.packages("C:/Users/wsggo/Documents/Rmosek_1.2.5.1.tar.gz", repos=NULL, type="source", INSTALL_opts="--no-multiarch")
install.packages("C:/Users/wsggo/Documents/Rmosek_1.2.5.1.tar.gz", repos=NULL, type="source", INSTALL_opts="--no-multiarch")
install.packages("C:/Users/wsggo/Documents/Rmosek_1.2.5.1.tar.gz", repos=NULL, type="source", INSTALL_opts="--no-multiarch")
install.packages("C:/Users/wsggo/Documents/Rmosek_1.2.5.1.tar.gz", repos=NULL, type="source", INSTALL_opts="--no-multiarch")
library("devtools")
load_all()
setwd("~/toronto")
library("glmnet")
?glmnet
devtools::document()
?l4acp
?glmnet
document()
?l4acp
document()
document()
document()
document()
?l4acp
?l4acp
document()
document()
?l4acp
document()
?l4acp
document()
?l4acp
document()
?l4acp
document()
load_all()
x <- grdata[,c(5:dim(grdata)[2])]
q <- grdata[,"gdp60"]
y <- grdata[,"gr"]
fit <- l4acp(x,y,q, s=0.0007)
library(SparseM)
library("sparseMatrix")
install.packages("sparseMatrix")
library(sparseMatrix)
sparseMatrix
sparseMatrix(print(fit))
sparseMatrix(print(fit))
install.packages("SparseMatrix")
library("glmnet")
library(Matrix)
Matrix::sparseMatrix()
?sparseMatrix
i <- c(1,3:8); j <- c(2,9,6:10); x <- 7 * (1:7)
(A <- sparseMatrix(i, j, x = x))
Matrix(print(fit), sparse=TRUE)
load_all()
fit
load_all()
load_all()
load_all()
load_all()
fit
load_all()
fit
load_all()
fit
load_all()
document()
fit
?l4acp
fit <- l4acp(x,y,q, s=0.0007)
load_all()
fit <- l4acp(x,y,q, s=0.0007)
rm(list=ls())
x <- grdata[,c(5:dim(grdata)[2])]
q <- grdata[,"gdp60"]
y <- grdata[,"gr"]
fit <- l4acp(x,y,q, s=0.0007)
x <- grdata[,c(5:dim(grdata)[2])]
q <- grdata[,"gdp60"]
y <- grdata[,"gr"]
fit <- l4acp(x,y,q, s=0.0007)
load_all()
x <- grdata[,c(5:dim(grdata)[2])]
q <- grdata[,"gdp60"]
y <- grdata[,"gr"]
fit <- l4acp(x,y,q, s=0.0007)
load_all()
x <- grdata[,c(5:dim(grdata)[2])]
q <- grdata[,"gdp60"]
y <- grdata[,"gr"]
fit <- l4acp(x,y,q, s=0.0007)
fit
x <- grdata[,c(5:dim(grdata)[2])]
q <- grdata[,"gdp60"]
y <- grdata[,"gr"]
fit <- l4acp(x,y,q, s=c(0.0007, 0.0014))
fit
load_all()
fit
load_all()
fit
as.double(3.33)
as.integer(3.33)
load_all()
fit
load_all()
fit
load_all()
load_all()
plot(fit)
plot(fit)
load_all()
load_all()
plot(fit)
load_all()
plot(fit)
load_all()
load_all()
plot(fit)
load_all()
plot(fit)
load_all()
plot(fit)
plot(fit, v=2)
plot(fit, v=1)
plot(fit, v=2)
load_all()
plot(fit, v=10)
coef(fit)
plot(fit, v=2, type="mse")
plot(fit, v=1, type="mse")
load_all()
cvfit <- cvl4acp(x,y,q,nfolds=5)
load_all()
cvfit <- cvl4acp(x,y,q,nfolds=5)
load_all()
cvfit <- cvl4acp(x,y,q,nfolds=5)
load_all()
cvfit <- cvl4acp(x,y,q,nfolds=5)
cvfit
plot(cvfit)
cvfit$lambda.seq
?cvl4acp
?plot.l4acp
data("grdata")
lrdata <- grdata[(!is.na(grdata[,"lr"])),]
x <- lrdata[,c(4:dim(grdata)[2])]
q <- lrdata[,"lr"]
y <- lrdata[,"gr"]
cvfit <- cvl4acp(x,y,q)
plot(cvfit)
cvfit$lambda.seq
plot(cvfit, logscale = TRUE)
load_all()
document()
?plot.cvl4acp
?l4acp
plot(cvfit)
documentation()
document()
?l4acp
document()
?l4acp
document()
load_all()
document)
document())
document()
?l4acp
document()
?l4acp
library(Matrix)
?Matrix
Rsessioninfo()
sessionInfo()
?l4acp
library("devtools")
install_github("wsggong/toronto")
?Matrix
install_github("wsggong/toronto")
install_github("wsggong/toronto")
library("toronto")
?l4acp
library("devtools")
document()
?l4acp
document()
document()
document()
?l4acp
document()
?l4acp
document()
?l4acp
library(devtools)
load_all()
